Обобщенные переменные и их использование
=====================================================

Описание переменных
--------------------------

Переменные, формируемые на основе обобщенных структур обычно являются специализациями (специализированными переменными). То есть, их тип строго определен, что позволяет знать и размер такой переменной, а также выполнение над ней операции sizeof во время компиляции. Тип специализации такой переменной задается как ее признак, идущий в угловых скобках. Например:

::

  struct Figure01<Rectangle> rect;
  struct Figure02<rhomb> rhombus;

Помимо этого такие переменные можно инициализировать, так как поля их также становятся известными. Инициализация альтернативной части задается в угловых скобках:
::

  struct Figure01<Triangle> t = <3, 4, 5>;

То есть, при инициализации пустые фигурные скобки можно не указывать.

Описание указателей
----------------------

Указатели на обобщение могут быть как специализированными, так и общими. В первом случае, как и для специализированной переменной, указывается признак специализации:
::

  struct Figure01<Triangle> *pt = &t;

Такие указатели могут ссылаться только на специализированные переменные и им могут присваиваться значения только других специализированных указателей с той же специализацией. В отличие от них обобщенные указатели не содержат признак специализации и могут ссылаться на различные специализации данного обобщения. Им также могут быть присвоены значения как специализированных так и обобщенных указателей имеющих аналогичный обобщенный тип.
::

  struct Figure01 *p = &rect;
  p = pt;

Фактически в данном случае происходит разыменование типа специализации, восстановление которого возможно либо путем динамической проверки признака специализации во время выполнения специальной функцией, либо во время выполненения обобщающих функций, реализующих процедурно-параметрический полиморфизм.

.. note::

  Это будет описано далее. Хорошо бы при этом подобрать для данной функции ключевое слово, наиболее подходящее по смыслу. Может быть ``case``?

Использование переменных
------------------------------

Доступ к полям специализированных переменных
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Доступ к структурным полям осуществляется точно также как доступ к полям обычных структур данных. Доступ к полям специализации организуется путем указания имени поля в угловых скобках:
::

  int i = t<a>;

